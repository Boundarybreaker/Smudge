plugins {
	id 'org.quiltmc.loom' version '0.12+'
	id 'maven-publish'
}

def targetJavaVersion = 17

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

loom {
	accessWidenerPath = file("src/main/resources/mycoturgy.accesswidener")
}

repositories {
	maven {
		url 'https://maven.quiltmc.org/repository/release'
		content {
			includeGroup 'org.quiltmc.quilted-fabric-api'
			includeGroupByRegex 'org.quiltmc.qsl(.[a-z_]+)?'
		}
	}
	mavenLocal()
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://maven.blamejared.com" }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.qm_build}:intermediary-v2"
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.qfapi_version}-${project.minecraft_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api-deprecated:${project.qfapi_version}-${project.minecraft_version}"

	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_version}") { transitive = false }
	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cardinal_version}") { transitive = false }
	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cardinal_version}") { transitive = false }
	include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_version}") { transitive = false }
	include modImplementation("dev.emi:trinkets:${project.trinkets_version}") { transitive = false }
	include modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}") { exclude group: "net.fabricmc.fabric-api" exclude group: "net.fabricmc" }
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}